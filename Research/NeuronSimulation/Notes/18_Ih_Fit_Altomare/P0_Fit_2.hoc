//==============================================================================
// File Name: P0_Fit_2.hoc

//==============================================================================
// Load NEURON main menu
load_file("nrngui.hoc")

//==============================================================================
alpha_0 = 0.01406
beta_0 = 743.6
gamma_0 = 2.289
delta_0 = 80

z_alpha = -0.9369
z_beta = 0.9369
z_gamma = -1.018
z_delta = 1.018

a = 0.2
f = 1 / a^0.5
r = 25.85

//==============================================================================
func get_rate(){	// $1:a0; $2:z; $3:v
	return $1 * exp($2 * $3 / r)
}

func K_func(){ local v	// $1:v
	return get_rate(delta_0, z_delta, $1)/get_rate(gamma_0, z_gamma, $1)
}

func L_func(){ local v	// $1:v
	return get_rate(beta_0, z_beta, $1)/get_rate(alpha_0, z_alpha, $1)
}

func P0_func(){ local v	// $1:v
	return 1/(1 + L_func($1)*((1 + 1 / K_func($1))/(1 + 1 / (a * K_func($1))))^4)
}


//==============================================================================
// Return the value of Boltzmann equation. $1: x; $2: x0; $3: k
func Boltzmann(){
	if($3 != 0){
		return 1/(1+exp(($1-$2)/$3))
	}
	
	return 0
}

//==============================================================================
// Find the best fit
double fitVar[3]

// Error function
func FittingError() {

	alpha_0 = $&2[0] / 100
	beta_0 = $&2[1] * 100
	gamma_0 = $&2[2]
	
	error = 0

	for(i = -100; i <= 0; i += 1){
		error += (P0_func(i) - Boltzmann(i, -80.5, 6.7))^2
	}
	
	return error
}

// Fitting procedure
proc FindBestFit(){

	// Set fitting parameters
	fitVar[0] = alpha_0 * 100
	fitVar[1] = beta_0 / 100
	fitVar[2] = gamma_0
	
	// Set fitting environment
	// (tolerance, max step size, print mode)
	attr_praxis(1e-5, 1, 1)
	
	// Find the best fit
	error = fit_praxis(3, "FittingError", &fitVar[0])
	
	// Assign new values to parameters
	alpha_0 = fitVar[0] / 100
	beta_0 = fitVar[1] * 100
	gamma_0 = fitVar[2]
}

FindBestFit()

//==============================================================================
